/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * StarRating.java
 *
 * Created on 25 Μαϊ 2010, 10:07:25 πμ
 */
package com.googlecode.starrating;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;

/**
 *
 * @author ssoldatos
 */
public class StarRating extends javax.swing.JPanel {

  private int rate;
  private Star[] stars = new Star[10];
  private JLabel value = new JLabel();
  private JButton editButton = new JButton();
  public static String EDIT_ICON = "images/edit.png";
  private boolean editMode = false;

  public StarRating() {
    this(0);
  }

  /** Creates new form StarRating
   * @param rate 
   */
  public StarRating(int rate) {
    initComponents();
    JPanel starPanel = new JPanel(new FlowLayout(FlowLayout.CENTER, 0, 0));
    starPanel.setOpaque(false);

    for (int i = 1; i < 11; i++) {
      String im;
      if (i % 2 == 1) {
        im = i <= rate ? Star.LEFT_ENABLED : Star.LEFT_DISABLED;
      } else {
        im = i <= rate ? Star.RIGHT_ENABLED : Star.RIGHT_DISABLED;
      }
      stars[i - 1] = new Star(im, i);
      starPanel.add(stars[i - 1]);
    }
    setRate(rate);
    //add(value);
    editButton.setPreferredSize(new Dimension(20, 16));
    editButton.setBackground(Color.white);
    editButton.setOpaque(false);
    editButton.setBorder(BorderFactory.createEmptyBorder());
    editButton.setIcon(new ImageIcon(getClass().getResource(EDIT_ICON)));
    add(starPanel,BorderLayout.CENTER);
    add(editButton,BorderLayout.EAST);
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    setBackground(new java.awt.Color(255, 255, 255));
    setMaximumSize(new java.awt.Dimension(120, 20));
    setMinimumSize(new java.awt.Dimension(100, 20));
    setName("StarRating"); // NOI18N
    setPreferredSize(new java.awt.Dimension(120, 20));
    addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseEntered(java.awt.event.MouseEvent evt) {
        formMouseEntered(evt);
      }
      public void mouseExited(java.awt.event.MouseEvent evt) {
        formMouseExited(evt);
      }
    });
    setLayout(new java.awt.BorderLayout());
  }// </editor-fold>//GEN-END:initComponents

  private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
    clearRate();
  }//GEN-LAST:event_formMouseEntered

  private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
    previewRate(getRate());
  }//GEN-LAST:event_formMouseExited

  void clearRate() {
    for (int i = 0; i < stars.length; i++) {
      Star star = stars[i];
      star.clearRate();
    }
  }

  void previewRate(int rate) {
    for (int i = 0; i < stars.length; i++) {
      Star star = stars[i];
      if (i < rate) {
        star.setRate();
      } else {
        star.clearRate();
      }
    }
    setLabelValue(rate);
  }

  public void setLabelValue(int rate) {
    double d = (double) rate / 2;
    value.setText(String.valueOf(d));
  }

  /**
   * @return the rate
   */
  public int getRate() {
    return rate;
  }

  /**
   * @param rate the rate to set
   */
  public void setRate(int rate) {
    this.rate = rate;
    previewRate(rate);
    setLabelValue(rate);
  }

  public JButton getEditButton() {
    return editButton;
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  // End of variables declaration//GEN-END:variables
}
